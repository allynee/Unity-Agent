Cat ID,Category,Instruction,Code
4,Edit size,Edit the Size property of the Lamp to be 100 times its current size.,"public void ResizeLamp()
            {
                SceneAPI sceneAPI = GetSceneAPI();
                Object3D lamp = sceneAPI.FindObject3DByName(\""Lamp\"");
                if(lamp != null)
                {
                        lamp.SetSizeByScale(100f);
                }
                else
                {
                        // Handle the case when the Lamp object is not found in the scene.
                }
            }"
4,Edit size,Edit the Size property of the Lamp to be 1.5 times its current size,"public void ResizeUserLamp()
    	{
		Object3D userLamp = GetSceneAPI().FindObject3DByName(\""UserLamp\"");
		if(userLamp != null)
		{
			Vector3D currentSize = userLamp.GetSize();
			currentSize.x *= 1.5f;
			currentSize.y *= 1.5f;
			currentSize.z *= 1.5f;
			userLamp.SetSize(currentSize);
		}
		else
		{
			// Handle the case where the UserLamp does not exist
		}
    	}"
4,Edit size,Edit the Size property of the Lamp to be 0.5 times its current size.," public void ResizeLamp()
            {
                SceneAPI sceneAPI = GetSceneAPI();
                Object3D lamp = sceneAPI.FindObject3DByName(\""Lamp\"");
                if(lamp != null)
                {
                        lamp.SetSizeByScale(0.5f);
                }
                else
                {
                        // Handle the case when the Lamp object is not found in the scene.
                }
            }"
9,Interact,Interact with the Lamp using the Tap function to toggle its Illumination property.,"public void ToggleLampIllumination()
            {
                SceneAPI sceneAPI = GetSceneAPI();
                Object3D lamp = sceneAPI.FindObject3DByName(\""Lamp\"");
                if(lamp != null)
                {
                        lamp.WhenSelected((args) => 
                        {
                                bool isLit = lamp.IsLit();
                                lamp.Illuminate(!isLit);
                        });
                }
                else
                {
                        // Handle the case when the Lamp object is not found in the scene.
                }
            }"
1,Create,Create a Lamp at the user's current position.,"private Object3D lamp;
private SceneAPI sceneAPI;
    
public void CreateLampAtUserPosition()
            {
                sceneAPI = GetSceneAPI();
                Vector3D userPosition = sceneAPI.GetUsersHeadPosition();
                lamp = sceneAPI.CreateObject(\""UserLamp\"", \""Lamp\"", userPosition, new Vector3D(0, 0, 0));
            }"
3,Edit rotation,Rotate the Lamp to face the same direction as the user.,"public void RotateLampToUserDirection()
	{
		Vector3D userOrientation = sceneAPI.GetUserOrientation();
		lamp.SetRotation(userOrientation);
	}"
9,Interact,Interact with the Ceiling LED Light to turn it on.,"public void TurnOnCeilingLight()
    	{
        	SceneAPI sceneAPI = GetSceneAPI();
        	List<string> lightNames = new List<string> {\""Ceiling LED Light\"", \""Ceiling LED Light (1)\"", \""Ceiling LED Light (2)\"", \""Ceiling LED Light (3)\"", \""Ceiling LED Light (4)\"", \""Ceiling LED Light (5)\""};
        	foreach(string lightName in lightNames)
        	{
            		Object3D light = sceneAPI.FindObject3DByName(lightName);
            		if(light != null)
            		{
                		light.WhenSelected((args) => 
                		{
                    			light.Illuminate(true);
                		});
            		}
            		else
            		{
                		// Handle the case when the light is not found in the scene
            		}
        	}
    	}"
9,Interact,Interact with the Ceiling LED Light (1) to turn it on.,
9,Interact,Interact with the Standing Lamp to turn it off.,"public void TurnOffLamp()
    	{
        	SceneAPI sceneAPI = GetSceneAPI();
        	Object3D lamp = sceneAPI.FindObject3DByName(\""Standing Lamp\"");
        	if(lamp != null)
        	{
            		lamp.WhenSelected((args) => 
            		{
                		lamp.Illuminate(false);
            		});
        	}
        	else
        	{
            		// Handle the case when the lamp is not found in the scene
        	}
    	}"
4,Edit size,Edit the Size of the Standing Lamp to be 50% of its original size.,"public void ResizeLamp()
    	{
        	SceneAPI sceneAPI = GetSceneAPI();
        	Object3D lamp = sceneAPI.FindObject3DByName(\""Standing Lamp\"");
        	if(lamp != null)
        	{
            		Vector3D currentSize = lamp.GetSize();
            		Vector3D newSize = new Vector3D(currentSize.x * 0.5f, currentSize.y * 0.5f, currentSize.z * 0.5f);
            		lamp.SetSize(newSize);
        	}
        	else
        	{
            		// Handle the case when the lamp is not found in the scene
        	}
    	}"
4,Edit size,Edit the Size of the Standing Lamp to be 5% of its current size.,"public void ResizeLamp()
    	{
        	SceneAPI sceneAPI = GetSceneAPI();
        	Object3D lamp = sceneAPI.FindObject3DByName(\""Standing Lamp\"");
        	if(lamp != null)
        	{
            		Vector3D currentSize = lamp.GetSize();
            		Vector3D newSize = new Vector3D(currentSize.x * 0.05f, currentSize.y * 0.05f, currentSize.z * 0.05f);
            		lamp.SetSize(newSize);
        	}
        	else
        	{
            		// Handle the case when the lamp is not found in the scene
        	}
    	}"
9,Interact,Interact with the Standing Lamp to turn it on.,"public void TurnOnLamp()
    	{
        	SceneAPI sceneAPI = GetSceneAPI();
        	Object3D lamp = sceneAPI.FindObject3DByName(\""Standing Lamp\"");
        	if(lamp != null)
        	{
            		lamp.WhenSelected((args) => 
            		{
                		lamp.Illuminate(true);
            		});
        	}
        	else
        	{
            		// Handle the case when the lamp is not found in the scene
        	}
    	}"
1,Create,Create a Lamp at the center of the room at a height equivalent to the average height of the tables in the room.,Don't have?? (4 btw)
1,Create,Create a Lamp at the user's eye level and 1 meter in front of their current position.,Don't have?? (4 btw)
1,Create,Create a table at the center of the room,"private Object3D table;

public void CreateTable()
    	{
		SceneAPI sceneAPI = GetSceneAPI();
		Vector3D center = sceneAPI.GetSceneSize();
		center.x /= 2;
		center.y = 0;
		center.z /= 2;
		table = sceneAPI.CreateObject(\""Table\"", \""Table\"", center, new Vector3D(0, 0, 0));
    	}"
5,Edit color,"Edit the Color of the UserLamp to red rgba(255, 0, 0, 1).","public void ChangeUserLampColor()
    	{
		Object3D userLamp = GetSceneAPI().FindObject3DByName(\""UserLamp\"");
		if(userLamp != null)
		{
			Color3D redColor = new Color3D(1, 0, 0, 1);
			userLamp.SetColor(redColor);
		}
		else
		{
			// Handle the case where the UserLamp does not exist
		}
    	}"
2,Edit position,Change the position of the UserLamp to be 1.5 times the current distance from the user.,"public void ChangeUserLampPosition()
    	{
		Object3D userLamp = GetSceneAPI().FindObject3DByName(\""UserLamp\"");
		if(userLamp != null)
		{
			Vector3D userPosition = GetSceneAPI().GetUsersHeadPosition();
			Vector3D lampPosition = userLamp.GetPosition();
			Vector3D direction = new Vector3D(lampPosition.x - userPosition.x, lampPosition.y - userPosition.y, lampPosition.z - userPosition.z);
			direction.x *= 1.5f;
			direction.y *= 1.5f;
			direction.z *= 1.5f;
			Vector3D newPosition = new Vector3D(userPosition.x + direction.x, userPosition.y + direction.y, userPosition.z + direction.z);
			userLamp.SetPosition(newPosition);
		}
		else
		{
			// Handle the case where the UserLamp does not exist
		}
    	}"
1,Create,Create a new object of type 'Chair' at the user's current position.,"public void CreateChairAtUserPosition()
    	{
        	SceneAPI sceneAPI = GetSceneAPI();
        	Vector3D userPosition = sceneAPI.GetUsersFeetPosition();
        	sceneAPI.CreateObject(\""NewChair\"", \""Chair\"", userPosition, new Vector3D(0, 0, 0));
    	}"
1,Create,Create a new object of type Chair,"private Object3D chair;
private SceneAPI sceneAPI;
private Vector3D roomSize;

public void CreateChair()
            {
                sceneAPI = GetSceneAPI();
                roomSize = sceneAPI.GetSceneSize();
                chair = sceneAPI.CreateObject(\""NewChair\"", \""Chair\"", new Vector3D(roomSize.x / 2, 0, roomSize.z / 2), new Vector3D(0, 0, 0));
            }"
2,Edit position,Move the 'NewChair' object to the farthest point in the user's field of view,
8,Edit levitation,Edit the 'NewChair' object's Levitation property to true,
5,Edit color,"Edit the color of the Chair to pink, rgba(255,105,180,1)","public void ChangeChairColor()
	{
		chair.SetColor(new Color3D(255/255f, 105/255f, 180/255f, 1));
	}"
2,Edit position,Position the Chair <5% * room's width> away from the Standing Lamp in the user's field of view.,"private Object3D standingLamp;

public void PositionChair()
	{
		List<Object3D> objectsInView = sceneAPI.GetAllObject3DsInFieldOfView();
		foreach (Object3D obj in objectsInView)
		{
			if (obj.GetType() == \""Standing Lamp\"")
			{
				standingLamp = obj;
				break;
			}
		}
		if (standingLamp != null)
		{
			Vector3D lampPosition = standingLamp.GetPosition();
			chair.SetPosition(new Vector3D(lampPosition.x + roomSize.x * 0.05f, 0, lampPosition.z));
		}
		else
		{
			// If no standing lamp is found in the user's field of view, the chair is positioned at the center of the room.
			chair.SetPosition(new Vector3D(roomSize.x / 2, 0, roomSize.z / 2));
		}
	}"