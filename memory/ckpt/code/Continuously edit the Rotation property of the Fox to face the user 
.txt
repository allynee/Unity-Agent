Instruction:
Continuously edit the Rotation property of the Fox to face the user 


Code:
private Object3D foxObject3D;

private void Update()
{
    if (foxObject3D!=null){
        RotateFoxToFaceUser();
    }else{
        foxObject3D = FindObject3DByName("Fox");
    }
}

public void RotateFoxToFaceUser()
{
    // Get the user's head position to face the fox towards the user
    Vector3D userHeadPosition = GetUsersHeadPosition();
    Vector3D foxPosition = foxObject3D.GetPosition();

    // Calculate the direction from the fox to the user's head position
    // Only considering the x and z components for horizontal rotation
    Vector3 directionToUser = new Vector3(userHeadPosition.x - foxPosition.x, 0, userHeadPosition.z - foxPosition.z);

    // Rotate the fox to face the user
    Quaternion rotationToFaceUser = Quaternion.LookRotation(directionToUser);

    // Convert the Quaternion rotation to Euler angles, then to Vector3D type for SetRotation
    Vector3 foxRotationEuler = rotationToFaceUser.eulerAngles;
    Vector3D foxRotation = new Vector3D(foxRotationEuler.x, foxRotationEuler.y, foxRotationEuler.z);
    foxObject3D.SetRotation(foxRotation);
}